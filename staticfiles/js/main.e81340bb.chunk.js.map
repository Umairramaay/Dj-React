{"version":3,"sources":["store/actions/auth.js","store/actions/actionTypes.js","containers/Layout/Layout.js","components/Article/Article.js","components/Form/Form.js","containers/ArticleListView.js","containers/ArticleDetailView.js","containers/Auth/Login.js","containers/Auth/Signup.js","Routes.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["authSuccess","token","type","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirtaionTime","dispath","setTimeout","Header","Layout","Content","withRouter","Footer","connect","actions","props","className","theme","mode","defaultSelectedKeys","isAuthenticated","Item","key","onClick","to","style","padding","margin","children","IconText","icon","text","React","createElement","articles","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","data","renderItem","item","title","StarOutlined","LikeOutlined","MessageOutlined","extra","width","alt","src","Meta","avatar","href","id","description","content","CustomForm","handleForm","values","requestType","articleID","document","getElementById","value","axios","post","then","res","window","location","reload","catch","put","onFinish","name","label","placeholder","htmlType","this","btnText","Component","ArticleList","state","get","setState","Article","articleId","ArticleDetail","article","handleDelete","event","match","params","delete","history","push","onSubmit","layout","labelCol","span","wrapperCol","tailLayout","offset","loading","onAuth","username","password","expirtaionDate","Date","getTime","setItem","err","LoadingOutlined","fontSize","spin","initialValues","remember","onFinishFailed","errorInfo","rules","required","message","Password","marginRight","email","password1","password2","Form","useForm","form","confirm","residence","prefix","scrollToFirstError","hasFeedback","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","baseRouter","exact","path","component","Login","Signup","onTryAutoSignup","getItem","undefined","useEffect","Boolean","hostname","updateObject","oldObject","updatedProperties","initialState","authStart","action","authLogout","reducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e81340bb.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type:actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = token => {\r\n    return {\r\n        type:actionTypes.AUTH_SUCCESS,\r\n        token:token\r\n    }\r\n}\r\n\r\nexport const authFail = error => {\r\n    return {\r\n        type:actionTypes.AUTH_FAIL,\r\n        error:error\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('expirtaionDate')\r\n    return {\r\n        type:actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\n\r\n export const checkAuthTimeout = expirtaionTime => {\r\n    return dispath => {\r\n        setTimeout(() => {\r\n            dispath(logout())\r\n        }, expirtaionTime * 1000)\r\n    }\r\n}\r\n\r\nexport const authLogin = (username,password) => {\r\n    return dispath => {\r\n        dispath(authStart());\r\n        axios.post('https://strider-blog.herokuapp.com/rest-auth/login/', {\r\n            username:username,\r\n            password:password\r\n        })\r\n        .then(res => {\r\n            const token = res.data.key;\r\n            const expirtaionDate= new Date(new Date().getTime()+3600 * 1000);\r\n            localStorage.setItem('token',token);\r\n            localStorage.setItem('expirtaionDate',expirtaionDate);\r\n            dispath(authSuccess(token))\r\n            dispath(checkAuthTimeout(3600))\r\n        })\r\n        .catch (err => {\r\n            dispath(authFail(err))\r\n        })\r\n    }\r\n}\r\n\r\nexport const authSignup = (username, email, password1, password2) => {\r\n    return dispath => {\r\n        dispath(authStart());\r\n        axios.post('https://strider-blog.herokuapp.com/rest-auth/registration/', {\r\n            username:username,\r\n            email:email,\r\n            password1:password1,\r\n            password2:password2\r\n        })\r\n        .then(res => {\r\n            const token = res.data.key;\r\n            const expirtaionDate= new Date(new Date().getTime()+3600 * 1000);\r\n            localStorage.setItem('token',token);\r\n            localStorage.setItem('expirtaionDate',expirtaionDate);\r\n            dispath(authSuccess(token))\r\n            dispath(checkAuthTimeout(3600))\r\n        })\r\n        .catch (err => {\r\n            dispath(authFail(err))\r\n        })\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispath => {\r\n        const token = localStorage.getItem('token');\r\n        if (token === undefined) {\r\n            dispath (logout())\r\n        }else {\r\n            const expirtaionDate = new Date (localStorage.getItem('expirtaionDate'))\r\n            if (expirtaionDate <= new Date() ) {\r\n                dispath (logout());\r\n            }else {\r\n                dispath (authSuccess(token))\r\n                dispath (checkAuthTimeout((expirtaionDate.getTime() - new Date().getTime())/1000 ))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import React from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport * as actions from '../../store/actions/auth';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst customLayout = (props) => {\r\n    return (\r\n        <Layout className=\"layout\">\r\n        <Header>\r\n            <div className=\"logo\" />\r\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n            \r\n            {\r\n                props.isAuthenticated ?\r\n                <Menu.Item key=\"2\" onClick={props.logout}>\r\n                    Logout\r\n                </Menu.Item>\r\n\r\n                :\r\n\r\n                <Menu.Item key=\"2\">\r\n                    <Link to=\"/login\">Login</Link> \r\n                </Menu.Item>\r\n\r\n            }\r\n                \r\n            <Menu.Item key=\"1\">\r\n                <Link to=\"/\"> Post </Link>  \r\n            </Menu.Item>\r\n            </Menu>\r\n        </Header>\r\n        <Content style={{ padding: '0 50px' }}>\r\n            <Breadcrumb style={{ margin: '16px 0' }}>\r\n            <Breadcrumb.Item><Link to=\"/\">Home</Link></Breadcrumb.Item>\r\n            <Breadcrumb.Item><Link to=\"/\">List</Link></Breadcrumb.Item>\r\n            \r\n            </Breadcrumb>\r\n            <div className=\"site-layout-content\">\r\n            {props.children}\r\n            </div>\r\n        </Content>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         loading:state.loading,\r\n//         error:state.error\r\n//     }\r\n// }\r\n\r\nconst mapDispatchToProps = dispath => {\r\n    return {\r\n        logout : () => dispath(actions.logout())\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(null,mapDispatchToProps)(customLayout))","import React from 'react'\r\nimport { List, Avatar, Space } from 'antd';\r\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst IconText = ({ icon, text }) => (\r\n  <Space>\r\n    {React.createElement(icon)}\r\n    {text}\r\n  </Space>\r\n);\r\n\r\n\r\nconst articles = (props) => {\r\n    return (\r\n        <List\r\n            itemLayout=\"vertical\"\r\n            size=\"large\"\r\n            pagination={{\r\n            onChange: page => {\r\n                console.log(page);\r\n            },\r\n            pageSize: 3,\r\n            }}\r\n            dataSource={props.data}\r\n            renderItem={item => (\r\n            <List.Item\r\n                key={item.title}\r\n                actions={[\r\n                <IconText icon={StarOutlined} text=\"156\" key=\"list-vertical-star-o\" />,\r\n                <IconText icon={LikeOutlined} text=\"156\" key=\"list-vertical-like-o\" />,\r\n                <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\" />,\r\n                ]}\r\n                extra={\r\n                <img\r\n                    width={272}\r\n                    alt=\"logo\"\r\n                    src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n                />\r\n                }\r\n            >\r\n                <List.Item.Meta\r\n                avatar={<Avatar src={item.avatar} />}\r\n                title={<a href={`/${item.id}`}>{item.title}</a>}\r\n                description={item.description}\r\n                />\r\n                {item.content}\r\n            </List.Item>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default articles\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport axios from 'axios';\r\n\r\n\r\nclass CustomForm extends React.Component {\r\n\r\n\r\n    handleForm = (values, requestType, articleID) => {\r\n        const title = document.getElementById('title').value;\r\n        const content = document.getElementById('content').value;\r\n        console.log(values, requestType, articleID);\r\n\r\n\r\n        switch (this.props.requestType) {\r\n            case 'post':\r\n                axios.post('https://strider-blog.herokuapp.com/api/', {\r\n                    title: title,\r\n                    content: content\r\n                })\r\n                    .then(res => { console.log(res); window.location.reload(); })\r\n                    .catch(error => console.log(error));\r\n                break;\r\n            case 'put':\r\n                // return axios.put(API_URL + articleID, {\r\n                axios.put(`https://strider-blog.herokuapp.com/api/${articleID}/`, {\r\n                    title: title,\r\n                    content: content\r\n                })\r\n                    .then(res => { console.log(res); window.location.reload(); })\r\n                    .catch(error => console.log(error));\r\n                break;\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form onFinish={(values) => this.handleForm(\r\n                    values,\r\n                    this.props.requestType,\r\n                    this.props.articleID\r\n                )}>\r\n                    <Form.Item name=\"title\" label=\"Title\">\r\n                        <Input id=\"title\" placeholder=\"Put a title here\" />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"content\" label=\"Content\">\r\n                        <Input id=\"content\" placeholder=\"Enter some content ...\" />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">{this.props.btnText}</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default CustomForm","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nimport Articles from '../components/Article/Article';\r\nimport CustomForm from '../components/Form/Form';\r\n\r\nexport class ArticleList extends Component {\r\n\r\n    state = {\r\n        articles: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://strider-blog.herokuapp.com/api/')\r\n            .then(res => {\r\n                this.setState({\r\n                    articles:res.data\r\n                });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Articles data={this.state.articles} />\r\n                <br />\r\n                <h2>Create Article Here</h2>\r\n                <CustomForm\r\n                requestType=\"post\"\r\n                articleId={null}\r\n                btnText=\"Create\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ArticleList","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nimport {Button ,Card} from 'antd';\r\nimport CustomForm from '../components/Form/Form';\r\n\r\nexport class ArticleDetail extends Component {\r\n\r\n    state = {\r\n        article: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        const articleID= this.props.match.params.articleID\r\n        axios.get('https://strider-blog.herokuapp.com/api/' + articleID )\r\n            .then(res => {\r\n                this.setState({\r\n                    article:res.data\r\n                });\r\n            })\r\n    }\r\n\r\n    handleDelete = (event) => {\r\n        const articleID= this.props.match.params.articleID\r\n        axios.delete(`https://strider-blog.herokuapp.com/api/${articleID}/`);\r\n        this.props.history.push('/')\r\n\r\n    }\r\n\r\n    // updateStateHandler = () => { \r\n    //     axios.get('http://127.0.0.1:8000/api/')\r\n    //         .then(res => {\r\n    //             this.setState({\r\n    //                 articles:res.data\r\n    //             });\r\n    //         })\r\n    //        .catch(function(err){\r\n    //            console.log(err);\r\n    //       })\r\n    //  }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title={this.state.article.title}>\r\n                    <p>{this.state.article.content}</p>\r\n                </Card>\r\n                <br />\r\n                <CustomForm \r\n                requestType=\"put\"\r\n                articleID={this.props.match.params.articleID}\r\n                btnText=\"Update\"\r\n                />\r\n                <form onSubmit={this.handleDelete}>\r\n                    <Button type=\"danger\" htmlType=\"submit\">Delete</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ArticleDetail;","import React from 'react'\r\n\r\nimport * as actions from '../../store/actions/auth';\r\n\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport { Form, Input, Button, Spin } from 'antd';\r\n\r\nimport {connect} from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n// const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Demo = (props) => {\r\n  const onFinish = values => {\r\n      props.onAuth(values.username, values.password)\r\n    // console.log('Success:', values);\r\n    props.history.push('/')\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    // console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        {\r\n            props.loading ?\r\n            <LoadingOutlined style={{ fontSize: 24 }} spin />\r\n            :\r\n            <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            >\r\n            <Form.Item\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                rules={[\r\n                {\r\n                    required: true,\r\n                    message: 'Please input your username!',\r\n                },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                {\r\n                    required: true,\r\n                    message: 'Please input your password!',\r\n                },\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                Login\r\n                </Button>\r\n                <br />\r\n                <br />\r\n                <NavLink style={{marginRight:'10px'}} to='/signup/' >\r\n                    SignUp\r\n                </NavLink>\r\n            </Form.Item>\r\n            </Form>\r\n}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading:state.loading,\r\n        error:state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispath => {\r\n    return {\r\n        onAuth : (username,password) => dispath(actions.authLogin(username,password))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Demo)\r\n","import React from 'react';\r\n\r\nimport * as actions from '../../store/actions/auth';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button\r\n} from 'antd';\r\n\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst RegistrationForm = (props) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = values => {\r\n    props.onAuth(\r\n        values.username,\r\n        values.email,\r\n        values.password,\r\n        values.confirm\r\n        )\r\n\r\n    props.history.push('/')\r\n    // console.log('Received values of form: ', values);\r\n  };\r\n\r\n  \r\n//   const [autoCompleteResult, setAutoCompleteResult] = useState([]);\r\n\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      name=\"register\"\r\n      onFinish={onFinish}\r\n      initialValues={{\r\n        residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n        prefix: '86',\r\n      }}\r\n      scrollToFirstError\r\n    >\r\n    <Form.Item\r\n        label=\"Username\"\r\n        name=\"username\"\r\n        rules={[\r\n        {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n        },\r\n        ]}\r\n    >\r\n        <Input />\r\n    </Form.Item>\r\n      <Form.Item\r\n        name=\"email\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your E-mail!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"confirm\"\r\n        label=\"Confirm Password\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please confirm your password!',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(rule, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve();\r\n              }\r\n\r\n              return Promise.reject('The two passwords that you entered do not match!');\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n      <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n            Signup\r\n            </Button>\r\n            <br />\r\n            <br />\r\n            <NavLink style={{marginRight:'10px'}} to='/login/' >\r\n                Login\r\n            </NavLink>\r\n        </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading:state.loading,\r\n        error:state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispath => {\r\n    return {\r\n        onAuth : (username, email,password1,password2) => dispath(actions.authSignup(username,email,password1,password2))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(RegistrationForm)","import React from 'react'\r\nimport {Route} from 'react-router-dom'\r\n\r\nimport ArticleList from './containers/ArticleListView';\r\nimport ArticleDetail from './containers/ArticleDetailView';\r\nimport Login from './containers/Auth/Login';\r\nimport Signup from './containers/Auth/Signup';\r\n\r\nconst baseRouter = () => (\r\n    <div>\r\n        <Route exact path='/' component={ArticleList} />\r\n        <Route exact path='/articles/:articleID/' component={ArticleDetail} />\r\n        <Route exact path='/login/' component={Login} />\r\n        <Route exact path='/signup/' component={Signup} />\r\n    </div>\r\n)\r\n\r\nexport default baseRouter;","import React, {useEffect} from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport {connect} from 'react-redux'\n\nimport 'antd/dist/antd.css';\n\nimport CustomLayout from './containers/Layout/Layout';\nimport BaseRouter from './Routes';\nimport * as actions from './store/actions/auth';\n\nfunction App(props) {\n\n  useEffect (() => {\n    props.onTryAutoSignup()\n  })\n\n  return (\n    <div>\n      <BrowserRouter>\n        <CustomLayout {...props}>\n          <BaseRouter />\n        </CustomLayout>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated:state.token !== null \n  }\n}\n\nconst mapDispatchToProps = dispath => {\n  return {\n    onTryAutoSignup: () => dispath(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../utility';\r\n\r\nconst initialState = {\r\n    token:null,\r\n    error:null,\r\n    loading:false\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject (state, {\r\n        error:null,\r\n        loading:true\r\n    })\r\n}\r\n\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject (state, {\r\n        token:action.token,\r\n        error:null,\r\n        loading:false\r\n    })\r\n}\r\n\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject (state, {\r\n        error:action.error,\r\n        loading:false\r\n    })\r\n}\r\n\r\n\r\nconst authLogout = (state,action) => {\r\n    return updateObject (state, {\r\n        token:null\r\n    })\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state,action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state,action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state,action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state,action);\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport reducer from './store/reducers/auth';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(\n  applyMiddleware(thunk)\n))\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}